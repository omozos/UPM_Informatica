#+TITLE: Ejercicios del Tema 4
#+SUBTITLE: Cadenas de caracteres
#+AUTHOR: 
#+DATE: 
#+SETUPFILE: config.org
#+PROPERTY: header-args :exports none
#+EXPORT_FILE_NAME: ejercicios_tema4_cadenas.pdf

* Palabra al revés

Escribe un programa que imprima al revés una palabra introducida por teclado. (ejemplo: =casa= se convierte en =asac=).

#+BEGIN_SRC C 
#include <stdio.h>

int main ()
{
  char palabra[12];
  int len, i;
  // Pide la palabra al usuario
  printf("Escribe una palabra (máximo 11 letras):\n");
  scanf("%11s", palabra);
  
  // Calcula la longitud de la cadena
  i = 0;
	while (palabra[i] != '\0')
	{
		i++;
	}
  len = i;
  
  // Empezamos por el último caracter (len - 1) y retrocedemos hasta
  // el primero (0)
  for(i = len-1; i >= 0; i--)
  {
    printf("%c", palabra[i]);
  }
    
  return 0;
}
#+END_SRC

* Espacios por guiones

Escribe	un programa que cambie los espacios en blanco por un guión bajo =_= en la frase siguiente:

#+begin_src C  :exports code
//Usamos \ para escribir varias lineas
  char texto[] = 
"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras euismod\
 orci ac porttitor finibus. Curabitur sed tincidunt est, nec mollis\
 lorem. Vestibulum facilisis dolor sit amet faucibus ultrices. Sed\
 pharetra vel erat et ornare. Duis eu lorem non leo dictum\
 egestas. Integer diam arcu, volutpat ut elit vitae, finibus molestie\
 risus. Vivamus sagittis commodo risus vel finibus. Vestibulum\
 vehicula tortor ut ante tincidunt, non tincidunt turpis sodales. Nam\
 orci diam, pulvinar in ante a, dignissim pulvinar magna. Mauris massa\
 tortor, fermentum pretium lobortis sed, luctus vitae\
 tortor. Suspendisse sagittis augue sit amet risus molestie, sed\
 dapibus enim vulputate. Sed tempus risus vel dolor ornare, eget\
 imperdiet ligula aliquam. Mauris ac auctor lacus. Quisque suscipit\
 interdum rutrum. Sed placerat sit amet urna in vulputate. Nulla\
 facilisis mi nisi, vel pulvinar odio auctor posuere.";
#+end_src

#+BEGIN_SRC C 
#include <stdio.h>

int main()
{
   //Asignamos el texto a una variable char, sin definir la dimension
  //Usamos \ para escribir varias lineas
  char texto[] = 
"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras euismod\
 orci ac porttitor finibus. Curabitur sed tincidunt est, nec mollis\
 lorem. Vestibulum facilisis dolor sit amet faucibus ultrices. Sed\
 pharetra vel erat et ornare. Duis eu lorem non leo dictum\
 egestas. Integer diam arcu, volutpat ut elit vitae, finibus molestie\
 risus. Vivamus sagittis commodo risus vel finibus. Vestibulum\
 vehicula tortor ut ante tincidunt, non tincidunt turpis sodales. Nam\
 orci diam, pulvinar in ante a, dignissim pulvinar magna. Mauris massa\
 tortor, fermentum pretium lobortis sed, luctus vitae\
 tortor. Suspendisse sagittis augue sit amet risus molestie, sed\
 dapibus enim vulputate. Sed tempus risus vel dolor ornare, eget\
 imperdiet ligula aliquam. Mauris ac auctor lacus. Quisque suscipit\
 interdum rutrum. Sed placerat sit amet urna in vulputate. Nulla\
 facilisis mi nisi, vel pulvinar odio auctor posuere.";

  int i = 0;
  //Recorremos el texto hasta el final
  while(texto[i] != '\0')
  {
    if(texto[i] == ' ') //Si encuentra un espacio
    {
      texto[i] = '_'; //lo sustituye por un guion bajo
    }
    i++;
  }
  printf("%s\n", texto); //Imprime el resultado

  return 0;    
}
#+END_SRC

#+RESULTS:
| Lorem_ipsum_dolor_sit_amet | _consectetur_adipiscing_elit._Cras_euismod_orci_ac_porttitor_finibus._Curabitur_sed_tincidunt_est | _nec_mollis_lorem._Vestibulum_facilisis_dolor_sit_amet_faucibus_ultrices._Sed_pharetra_vel_erat_et_ornare._Duis_eu_lorem_non_leo_dictum_egestas._Integer_diam_arcu | _volutpat_ut_elit_vitae | _finibus_molestie_risus._Vivamus_sagittis_commodo_risus_vel_finibus._Vestibulum_vehicula_tortor_ut_ante_tincidunt | _non_tincidunt_turpis_sodales._Nam_orci_diam | _pulvinar_in_ante_a | _dignissim_pulvinar_magna._Mauris_massa_tortor | _fermentum_pretium_lobortis_sed | _luctus_vitae_tortor._Suspendisse_sagittis_augue_sit_amet_risus_molestie | _sed_dapibus_enim_vulputate._Sed_tempus_risus_vel_dolor_ornare | _eget_imperdiet_ligula_aliquam._Mauris_ac_auctor_lacus._Quisque_suscipit_interdum_rutrum._Sed_placerat_sit_amet_urna_in_vulputate._Nulla_facilisis_mi_nisi | _vel_pulvinar_odio_auctor_posuere. |

* Cuenta letras

- Escribe un programa que analice la frase del ejercicio anterior contando en número de veces que aparece cada vocal. Al final del programa, se debe pintar en el terminal, para cada letra, una línea que contiene el mismo númeor de asteríscos que veces aparece esa vocal.

#+begin_src C 
#include <stdio.h>

int main()
{
  char frase[] = //Usamos \ para escribir varias lineas
"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras euismod\
 orci ac porttitor finibus. Curabitur sed tincidunt est, nec mollis\
 lorem. Vestibulum facilisis dolor sit amet faucibus ultrices. Sed\
 pharetra vel erat et ornare. Duis eu lorem non leo dictum\
 egestas. Integer diam arcu, volutpat ut elit vitae, finibus molestie\
 risus. Vivamus sagittis commodo risus vel finibus. Vestibulum\
 vehicula tortor ut ante tincidunt, non tincidunt turpis sodales. Nam\
 orci diam, pulvinar in ante a, dignissim pulvinar magna. Mauris massa\
 tortor, fermentum pretium lobortis sed, luctus vitae\
 tortor. Suspendisse sagittis augue sit amet risus molestie, sed\
 dapibus enim vulputate. Sed tempus risus vel dolor ornare, eget\
 imperdiet ligula aliquam. Mauris ac auctor lacus. Quisque suscipit\
 interdum rutrum. Sed placerat sit amet urna in vulputate. Nulla\
 facilisis mi nisi, vel pulvinar odio auctor posuere.";
  
  char vocales[5] = {'a', 'e', 'i', 'o', 'u'};
  int i, j; 
  int nLetra[5] = {0, 0, 0, 0, 0};  //Vector de resultados

  // Cuenta las apariciones de cada vocal, y almacena resultados en nLetra
  i = 0;
  while (frase[i] != '\0') // Recorre la cadena de caracteres
  {
    switch(frase[i]) // Compara el caracter con las vocales
    {
      case 'a':
      case 'A':
        nLetra[0]++;
      break;
    
      case 'e':
      case 'E':
        nLetra[1]++;
      break;
    
      case 'i':
      case 'I':
        nLetra[2]++;
      break;
	
      case 'o':
      case 'O':
        nLetra[3]++;
      break;
	
      case 'u':
      case 'U':
        nLetra[4]++;
      break;
    }
  // Avanzo en la frase  
  i++; 
  }
  // Recorre el vector de resultados, y pinta asteriscos
  // correspondientes a cada letra
  for (i = 0; i < 5; i++)
  { 
    printf("%c: ", vocales[i]);
    for (j = 1; j <= nLetra[i]; j++)
    {
      printf("*");
    }
    printf("\n");
  }
  
  return 0;
}
#+end_src

#+RESULTS:
| a: | ********************************************************                              |
| e: | *******************************************************************                   |
| i: | ************************************************************************************* |
| o: | *****************************************                                             |
| u: | ****************************************************************                      |
