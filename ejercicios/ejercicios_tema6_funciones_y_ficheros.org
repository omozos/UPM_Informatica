#+TITLE: Ejercicios del Tema 6
#+SUBTITLE: Ficheros
#+AUTHOR: 
#+DATE: 
#+SETUPFILE: config.org
#+PROPERTY: header-args :exports none
#+EXPORT_FILE_NAME: ejercicios_tema7.pdf

* Copia de ficheros
Escribe un programa que copie el contenido de un fichero en otro cambiando los espacios en blanco por un guión bajo _. Además, debe contar cuántos cambios se han producido. Emplea el fichero lorem_ipsum.txt como ejemplo. El ejercicio debe resolverse empleando una función con el siguiente prototipo:
#+BEGIN_SRC C :exports code
int espacio_por_guion(char texto[]);
#+END_SRC

#+BEGIN_SRC C
#include <stdio.h>

int espacio_por_guion(char texto[]);

int main ()
{
  FILE *fOrigen, *fDestino;
  char texto[1000];    // Definimos un vector suficientemente largo
	int cambios; 
	
  // Abre ficheros:
  // El origen en modo lectura:
  fOrigen = fopen("lorem_ipsum.txt", "r");
  if (fOrigen == NULL) 
  {
    printf("Error al abrir el archivo origen.\n");
    return -1;
  }
  else 
  {
    // El destino en modo escritura:
    fDestino = fopen("lorem_ipsum2.txt", "w");
    if (fDestino == NULL) 
    {
      printf("Error al abrir el archivo destino.\n");
      return -1;
    } 
    else 
    { // Los dos ficheros están correctamente abiertos
      // Leemos el origen caracter por caracter, parando al encontrar
      // el EOF
      int i = 0;
      while (fscanf(fOrigen, "%c", &texto[i]) != EOF)
      {
        printf("%c", texto[i]); 
        i++;
      }
      // Cerramos fichero
      fclose(fOrigen);
      
      // ponemos la marca de final de cadena
      texto[i] = '\0';
      
      cambios = espacio_por_guion(texto);
      int j = 0;
      while (j<=i)
      {
        fprintf(fDestino, "%c", texto[j]); // Escribimos el caracter en el destino
        j++;
      }
      // Cerramos fichero
      fclose(fDestino);
      printf("\nCopia finalizada con exito, se han hecho %d cambios.\n", cambios);
      
      return 0;
    }
  }
}

int espacio_por_guion(char texto[])
{
  int num_cambio=0;
  int i = 0;
  while (texto[i] != '\0')
  {
    if (texto[i] == ' ')
    {
      texto[i] = '_'; // Cambiamos espacios por guiones
      num_cambio++;
    } 
    i++;
  }
  return num_cambio;
}
#+END_SRC

#+RESULTS:

* Cuenta letras

Escribe un programa que analice la frase del ejercicio anterior contando en número de veces que aparece cada vocal, de manera similar al ejercicio del tema 4 de cadenas de caracteres. Al final del programa, se debe pintar en el terminal, para cada vocal, una línea que contiene el mismo número de asteríscos que veces aparece esa vocal. Este programa debe estar programado empleando dos funciones, cuentaLetra y pintaAsteriscos. Puedes usar el fichero lorem_ipsum.txt como ejemplo. 

#+BEGIN_SRC C
#include <stdio.h>

int cuentaLetra(char x, char texto[]);
void pintaAsteriscos(int n);

int main()
{
  FILE *pf;
  char texto[1000];// Aseguramos tener un tamaño suficiente para la longitud del fichero a leer
  char vocales[5] = {'a', 'e', 'i', 'o', 'u'};
  int i = 0; 
  int num_Vocales[5] = {0};
  
  // Abrimos fichero para lectura
  pf = fopen("lorem_ipsum.txt", "r");
  if (pf == NULL)
  {
    printf("Error en apertura de fichero.\n");
    return -1;
  }
  
  // Leemos los caracteres de 1 en 1
  // los almacenamos en cadena de caracteres
  // y los contamos
  while(fscanf(pf, "%c", &texto[i]) != EOF)
  {
    ++i;
  }

  //Cerramos la cadena de caracteres
  texto[i] = '\0';

  // Recorremos texto contando vocales
  for (i = 0; i < 5; i++)
  {
    num_Vocales[i] = cuentaLetra(vocales[i], texto);
  }
  
  for (i = 0; i < 5; i++)
  { 
  // Recorre el vector de resultados, y pinta asteriscos
    // correspondientes a cada letra
    printf("%c: ", vocales[i]);
    pintaAsteriscos(nVocales[i]);
    printf("\n");
  }
  fclose(pf);
  
  return 0;
}

int cuentaLetra(char x, char texto[])
{
  int i, n = 0;
  int inc = 'A' - 'a';

  i = 0;

  while (texto[i] != '\0')
  {
    // Comprueba mayúsculas y minúsculas
    if (texto[i] == x || texto[i] == x + inc)
    {
      n++; // Contador de apariciones
    }
    i++;
  }

  return n;
}

void pintaAsteriscos(int n)
{
  int i;
  if (n > 0)
  {
    for (i = 1; i <= n; i++)
    {
      printf("*");
    }  
  }    
}
#+END_SRC

#+RESULTS:
| Caracteres: 848 | Palabras: 146 | Líneas: 16. |



* Máximo, mínimo y promedio de variables

El fichero aranjuez.csv es un fichero que almacena valores numéricos en formato CSV (valores separados por comas). Contiene 4 columnas (variables) y 2898 filas (registros). Cada fila corresponde a un valor diario de una variable meteorológica registrada en la estación localizada en Aranjuez. Estas variables son: temperatura ambiente, humedad, velocidad del viento, radiación solar.

Escribe un programa que lea este fichero almacenando el contenido de cada columna en un vector. A continuación, el programa debe calcular el valor máximo, mínimo y promedio de cada vector, empleando una función separada para cada cálculo. Finalmente, el programa mostrará el resultado en pantalla y escribirá estos cálculos en un fichero con un formato similar al siguiente:

| Variable | Min | Max | Media |
| Temp     | XX  | XX  | XX    |
| Humedad  | XX  | XX  | XX    |
| Viento   | XX  | XX  | XX    |
| Rad      | XX  | XX  | XX    |


#+BEGIN_SRC C
#include <stdio.h>
#define N 2898

double maximo(double x[], int n);
double minimo(double x[], int n);
double promedio(double x[], int n);

int main()
{
  FILE *pf, *wf;
  int i;
  // Defino un vector para cada variable a leer del fichero
  double TempAvg[N], HumidAvg[N], WindAvg[N],Radiation[N];
  double minTa, minH, minW, minR;
  double maxTa, maxH, maxW, maxR;
  double promTa, promH, promW, promR;
  
  pf = fopen("aranjuez.csv", "r");
  if (pf == NULL)
  {
    printf("Error al abrir el fichero");
    return -1;
  }
  else
  { // Leemos el fichero línea a línea
    for (i = 0; i < N; i++)
    { 
      // El formato es de números separados por comas
      fscanf(pf, "%lf,%lf,%lf,%lf", &TempAvg[i],  &HumidAvg[i], &WindAvg[i], &Radiation[i]);
    }
    // Cerramos el fichero
    fclose(pf);
      
    // Calcula el minimo, maximo y promedio usando las funciones
    minTa = minimo(TempAvg, N);
    maxTa = maximo(TempAvg, N);
    promTa = promedio(TempAvg, N);

    minH = minimo(HumidAvg, N);
    maxH = maximo(HumidAvg, N);
    promH = promedio(HumidAvg, N);

    minW = minimo(WindAvg, N);
    maxW = maximo(WindAvg, N);
    promW = promedio(WindAvg, N);

    minR = minimo(Radiation, N);
    maxR = maximo(Radiation, N);
    promR = promedio(Radiation, N);

    // Mostramos resultados
    printf("Variable: \t Min \t Max \t Prom \n");
    printf("Temp: \t %lf \t %lf \t %lf \n", minTa, maxTa, promTa);
    printf("Humedad: \t %lf \t %lf \t %lf \n", minH, maxH, promH);
    printf("Viento: \t %lf \t %lf \t %lf \n", minW, maxW, promW);
    printf("Radiacion: \t %lf \t %lf \t %lf \n", minR, maxR, promR);

    // Escribimos fichero
    wf = fopen("resumen.txt", "w");
      
    fprintf(wf, "Variable: \t Min \t Max \t Prom \n");
    fprintf(wf, "Temp: \t %lf \t %lf \t %lf \n", minTa, maxTa, promTa);
    fprintf(wf, "Humedad: \t %lf \t %lf \t %lf \n", minH, maxH, promH);
    fprintf(wf, "Viento: \t %lf \t %lf \t %lf \n", minW, maxW, promW);
    fprintf(wf, "Radiacion: \t %lf \t %lf \t %lf \n", minR, maxR, promR);
      
    // Cerramos el fichero
    fclose(wf);
      
      return 0;
  }
}

double maximo(double x[], int n)
{
  int i;
  double mx = x[0]; //El maximo inicial es el primer elemento
  // Busca en el vector algún valor mayor
  for (i = 1; i < n; i++)
  {
    if (x[i] > mx) 
    {
      mx = x[i]; // y lo sustituye si lo encuentra
    }
  }
  
  return mx;
}

double minimo(double x[], int n)
{
  int i;
  double mn = x[0]; //El minimo inicial es el primer elemento

  // Busca en el vector algún valor menor
  for (i = 1; i < n; i++)
  {
    if (x[i] < mn)
    {
      mn = x[i];		
    }
  }
  
  return mn;
}

double promedio(double x[], int n)
{
  int i;
  double media = 0.0;

  for (i = 0; i < n; i++)
  {
    media = media + x[i];
  }
  
  return media / n;
}
#+END_SRC

#+RESULTS:
| Variable:  |    Min |   Max |      Prom |
| Temp:      | -5.309 | 30.68 | 14.404857 |
| Humedad:   |  19.89 | 100.0 |  62.16033 |
| Viento:    |  0.251 |  8.26 |  1.173880 |
| Radiacion: |  0.277 | 32.74 | 16.731543 |

