#+TITLE: Ejercicios del Tema 3
#+SUBTITLE: Sentencias Condicionales
#+AUTHOR: 
#+DATE: 
#+SETUPFILE: config.org
#+PROPERTY: header-args :exports none
#+EXPORT_FILE_NAME: ejercicios_tema3_condicionales.pdf

* Números divisibles

Escribe un programa que compruebe si, dados dos números enteros tecleados por el usuario, el primero es divisible por el segundo.

#+BEGIN_SRC C
#include <stdio.h>

int main()
{
  int x, y;

  printf("Indique dos números enteros.\n");
  scanf("%i %i", &x, &y);

  // Si el segundo número es un 0, no se puede hacer la división. 
  if (y == 0)
  {
    printf("No se puede hacer la operacion.\n");
  }
  else if (x % y == 0)
  {
    printf("El número %i es divisible por %i.\n", x, y);
  }  
  else
  {
    printf("El número %i no es divisible por %i.\n", x, y);
  }
    
  return 0;
}
#+END_SRC


* Letras y números
Elabora un programa que solicite al usuario que apriete una tecla y determine si es una letra, un número, o un carácter especial.

#+BEGIN_SRC C
#include <stdio.h>

int main()
{
  char tecla;

  printf ("Apriete una tecla cualquiera.\n");
  scanf  ("%c", &tecla);

  // Si es valor está entre las letras minúsculas O las lestas máyusculas
  if ((tecla >= 'a' && tecla <= 'z') || (tecla >= 'A' && tecla <= 'Z'))
  {
    printf("Es una letra.\n");
  }
  else 
  {
    if (tecla >= '0' && tecla <= '9')
    {
      printf("Es un número.\n");
    }
    else
    {
      printf("Es un caracter especial.\n");
    }
  }  
  return 0;
}
#+END_SRC


* Operaciones algebraicas
Realiza un programa en el que el usuario pueda seleccionar la operación matemática a realizar con dos números que introduce por teclado (suma, resta, multiplicación, división, potencia).

#+BEGIN_SRC C
#include <stdio.h>
#include <math.h>   // Se usa para la operación de potencia

int main ()
{
  float v1, v2;
  char op;
  printf("Introduzca dos numeros separados por la operación que quiere realizar: \n");
  scanf("%f %c %f", &v1, &op, &v2);

  switch(op)
  {
    case '+':
      printf("%f\n", v1 + v2);
      break;
    case '-':
      printf("%f\n", v1 - v2);
      break;
    case '*':
      printf("%f\n", v1 * v2);
      break;
    case '/':
      // Evitamos hacer una división por cero
      if (v2 == 0)
      {
        printf("División por cero.\n");
      }
      else
      {
        printf("%.2f\n", v1 / v2);
      }
      break;
    case '^':
      printf("%f\n", pow(v1, v2));
      break;
    default:
      printf("No se hacer esa operación.\n");
      break;
  }
  return 0;
}
#+END_SRC


* Mayor

Realice un programa que solicite tres números enteros e imprima el mayor de ellos.

#+BEGIN_SRC C
#include <stdio.h>

int main()
{
  int x, y, z;

  printf("Indique tres números enteros.\n");
  scanf("%i %i %i", &x, &y, &z);
		
  // Usamos mayor igual porque el mayor podría estar repetido
  if(x>=y)
  {
    if(x>=z)
    {
      printf("El mayor es %i", x);
    }
    else
    {
      if(y>=z)
      {
        printf("El mayor es %i", y);
      }
      else
      {
        printf("El mayor es %i", z);
      }
    }
  } 
  else
  {
    if(y>=z)
    {
      printf("El mayor es %i", y);
    }
    else
    {
      printf("El mayor es %i", z);
    }
  }
    
  return 0;
}
#+END_SRC


* Días de la semana
Escribe un programa que imprima el nombre del día que corresponde a un número entero introducido por el usuario. Supón que el 1 corresponde al lunes, y así sucesivamente. Si el número introducido es mayor que 7, se considerará que el 8 el lunes, 9 martes, etc... Números menores que 1 no son válidos. Se recomienda hacerlo con switch.

#+BEGIN_SRC C
#include <stdio.h>

int main()
{
  int n;
  printf("Introduzca número de día: ");
  scanf("%i", &n);

  // Solo números mayores que cero son válidos
  if(n>0)
  {  
    // Aseguramos que todos los números valen siempre entre 0 y 6.
    // Cambiamos para que el 0 sean los domingos, esto no afecta al usuario que puede introducir un 7.
    // Ya que el resto de un múltiplo de 7, entre 7, es cero
    n = n%7;

    switch(n)
    {
      case 1:
        printf("Lunes\n");
        break;
      case 2:
        printf("Martes\n");
        break;
      case 3:
        printf("Miércoles\n");
        break;
      case 4:
        printf("Jueves\n");
        break;
      case 5:
        printf("Viernes\n");
        break;
      case 6:
        printf("Sábado\n");
        break;
      case 0:
        printf("Domingo\n");
        break;
      default:
        printf("Número incorrecto\n");
    }
  }
  return 0;
} 
#+END_SRC

* Área de figuras geométricas
Escribe un programa que pregunte primero si quieres calcular el área de un triángulo o de un círculo. Si el usuario contesta que quiere calcular el área de un triángulo, el programa tiene que pedir entonces la base y la altura y escribir el área. Si contesta que quiere calcular el área de un círculo, el programa tiene que pedir entonces el radio y escribir el área.

#+BEGIN_SRC C
#include <stdio.h>
#include <math.h>

int main()
{
  char elige;
  float b, h, r;
  float area;
  //
  printf("Elige Triangulo (T) o Circulo (C)\n");
  scanf("%c", &elige);

  switch(elige)
  {
    case 't':
    case 'T':
      printf("Base?\n");
      scanf("%f", &b);
      printf("Altura?\n");
      scanf("%f", &h);
      area = (b * h) / 2;
      break;
    case 'c':
    case 'C':
      printf("Radio?\n");
      scanf("%f", &r);
      area = M_PI * pow(r, 2);
      break;
    default:
      printf("Opcion desconocida\n");
      area = 0;
  }
  printf("Area %f\n", area);
  return 0;
}
#+END_SRC

* Letras
Escriba un programa que solicite 2 caracteres al usuario y los imprima ordenados alfabéticamente. 

#+BEGIN_SRC C
#include <stdio.h>

int main() 
{
    char c1, c2;
    // Solicitar entrada al usuario
    printf("Introduce dos caracteres: ");
    scanf("%c", &c1);
    scanf(" %c", &c2);

    if (c1 > c2) 
    {
        printf("Ordenados: %c %c\n", c2, c1);
    } else
    {
        printf("Ordenados: %c %c\n", c1, c2);
    }    
    return 0;
}
#+END_SRC

* Sistema de ecuaciones
Sea un sistema de escuaciones: 

    $a \cdot x + b \cdot y = c$

    $d \cdot x + e \cdot y = f$

del que se pueden calcular las soluciones como:

    $x = (ce-bf)/(ae-bd)$

    $y = (af-cd)/(ae-bd)$

Escriba un programa que lea los coeficientes de las ecuaciones (a, b, c, d, e, f), y luego resuelva el sistema. 
Indique cuando el sistema no tiene solución. 

#+BEGIN_SRC C
#include <stdio.h>

int main() 
{
    float a, b, c, d, e, f;
    float x, y, denominador;

    // Solicitar los coeficientes al usuario
    printf("Introduce los coeficientes a, b, c, d, e, f separados por espacios:\n");
    scanf("%f %f %f %f %f %f", &a, &b, &c, &d, &e, &f);

    // Calcular el determinante del sistema
    denominador = a * e - b * d;

    // Verificar si el sistema tiene solución
    if (denominador == 0) {
        printf("El sistema no tiene solución o tiene infinitas soluciones.\n");
    } else 
    {
        // Calcular las soluciones
        x = (c * e - b * f) / denominador;
        y = (a * f - c * d) / denominador;

        // Imprimir la solución
        printf("Solución del sistema:\n");
        printf("x = %.2f\n", x);
        printf("y = %.2f\n", y);
    }

    return 0;
}

#+END_SRC


* Ecuación de segundo  grado
Escribe un programa que pida los coeficientes de una ecuación de segundo grado ($a \cdot x^2 + b \cdot x + c = 0$) y escriba la solución. Recuerda que una ecuación de segundo grado puede tener dos soluciones reales diferentes, una única solución real, o dos soluciones complejas conjugadas.

#+BEGIN_SRC C
#include<stdio.h>
#include<math.h>      // Lo usamos para hacer las raíces cuadradas
 
int main()
{
  float a, b, c, disc, x1, x2, xi, xr;
  printf("Escribe el valor de los tres coeficientes (a, b, c)\n");
  scanf("%f %f %f", &a, &b, &c);

  // Si a = 0, entonces es una ecuación de primer grado
  if (a != 0)
  {
    disc = pow(b, 2) - 4 * a * c;
    if(disc > 0)
    {
      printf("Las dos raices son reales: ");
      x1=(-b + sqrt(disc)) / (2 * a);
      x2=(-b - sqrt(disc)) / (2 * a);
      printf("x1=%.2f \t x2=%.2f", x1, x2);
    }
    else if(disc == 0)
    {
      x1 = -b / (2 * a);
      printf("Raíz única %.2f", x1);
    }
    // Si es menor que cero, las soluciones tienen parte real y parte imaginaria
    // El número imaginario como tal no lo podemos calcular, así que le añadimos la 'i'
    else
    {
      xr = -b / (2 * a);
      xi = sqrt(-disc) / (2 * a);
      printf("La raices son %.2f +- %.2f i", xr, xi);
    }
  } 
  else
  {
    printf("El coeficiente a no puede ser 0.\n");
  }

  return 0;
}
#+END_SRC


* Mayor menor
Se pide realizar un programa que calcule el máximo y el mínimo de dos datos tecleados por el usuario y que deben estar en el rango [0.0 100.0]. Si alguno de los datos introducidos estuviera fuera del rango se imprimirá un aviso de ERROR.

#+BEGIN_SRC C
#include <stdio.h>

int main()
{
  float a, b;
  
  printf("Introduce 2 números entre cero y cien: \n");
  scanf("%f %f", &a, &b);
  
  if( (a<0) || (a>100) || (b<0) || (b>100))
  {
    printf("ERROR al introducir los números \n");
  }
  else
  {
    if(a<b)
    {
      printf("El mínimo es %f y el máximo es %f.", a, b);
    }
    else
    {
      if(a>b)
      {
        printf("El mínimo es %f y el máximo es %f.", b, a);
      }
      else
      {
        printf("El mínimo y el máximo son el mismo número: %f.", a);      
      }
    }
  }
  return 0;
}
#+END_SRC

* Años bisiestos
Escribe un programa que permita comprobar si un año (dado por teclado) es bisiesto o no. Recuerda que son bisiestos los años divisibles por 4, excepto los que son divisibles por 100 pero no por 400.

#+BEGIN_SRC C
#include <stdio.h>

int main()
{
  // Usaremos esta variable para guardar el año que introduce el usuario
  int year;
  // Usaremos esta variable para guardar la valoración del año
  int isBisiesto;

  printf("Indique el año.\n");
  scanf("%i", &year);

  // Esta ecuación lógica debe resultar verdadero (1) si el año es bisiesto, o falso (0) si no o es
  if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0))
  {
    printf("El año %i es bisiesto.\n", year);    
  }
  else
  {
    printf("El año %i no es bisiesto.\n", year);
  }

  return 0;
}
#+END_SRC

* Piedra, papel o tijera
En el juego para dos personas llamado "PIEDRA (I), PAPEL (P) O TIJERA (T)" cada jugador escoge ser "T", "I" o "P" respectivamente. El juego se determina así: piedra rompe tijera, tijera corta papel, papel cubre la piedra, el juego es un empate si ambos jugadores eligen la misma opción. Elaborar un programa para que determine qué jugador gana, la salida debe mostrarse de la siguiente forma: "T-I Piedra rompe tijeras gana el jugador 2.

#+BEGIN_SRC C
#include <stdio.h>

int main()
{
  char j1, j2;

  printf("Cada jugador debe elegir entre PIEDRA (I), PAPEL (P) O TIJERA (T): \n\n");

  printf("Introduce elección de jugador 1: \n");
  scanf("%c", &j1);
  
  printf("Introduce elección de jugador 2: \n");
  fflush(stdin);
  scanf("%c", &j2);
 
  // Se usa al jugador 1 como referencia y, dentro de cada caso, hago las comparaciones necesarias
  switch(j1)
  {
    case 'I':    // Jugador 1 elige piedra
      if (j1 == j2)     // Jugador 2 elige piedra
      {
        printf("I-I Empate.\n");
      }
      else
      {
        if(j2 == 'P')  // Jugador 2 elige papel
        {
          printf("I-P Papel envuelve a piedra, gana el jugador 2.\n");
        }
        else
        {
          if(j2 == 'T') // Jugador 2 elige tijera
          {
            printf("I-T Piedra rompe a tijera, gana el jugador 1.\n");
          }
          else // Jugador 2 elige mal
          {
            printf("El jugador 2 ha elegido una opción no válida");
          }
        }
      }
      break;
    
    case 'P':    // Jugador 1 elige papel
      if (j1 == j2) // Jugador 2 elige papel
      {
        printf("P-P Empate.\n");
      }
      else
      {
        if(j2 == 'I')  // Jugador 2 elige piedra
        {
          printf("P-I Papel envuelve a piedra, gana el jugador 1.\n");
        }
        else
        {
          if(j2 == 'T') // Jugador 2 elige tijera
          {
            printf("P-T Tijera corta papel, gana el jugador 2.\n");
          }
          else // Jugador 2 elige mal
          {
            printf("El jugador 2 ha elegido una opción no válida");
          }
        }
      }
      break;
    
    case 'T':    // Jugador 1 elige tijera
      if (j1 == j2) // Jugador 2 elige tijera
      {
        printf("T-T Empate.\n");
      }
      else
      {
        if(j2 == 'I')  // Jugador 2 elige piedra
        {
           printf("T-I Piedra rompe a tijera, gana el jugador 2.\n");
        }
        else
        {
          if(j2 == 'P') // Jugador 2 elige papel
          {
            printf("T-P Tijera corta papel, gana el jugador 1.\n");
          }
          else // Jugador 2 elige mal
          {
            printf("El jugador 2 ha elegido una opción no válida");
          }
        }
      }
      break;
    
    default: 
      printf("El jugador 1 ha elegido una opción no válida");
  }
  
  return 0;
}
#+END_SRC


# Local Variables:
# ispell-local-dictionary: "spanish"
# End:
